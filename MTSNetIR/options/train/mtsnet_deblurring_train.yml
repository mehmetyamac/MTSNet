# general settings
name: mtsnet_deblurring_train
model_type: ImageCleanModel
scale: 1
num_gpu: 8  # set num_gpu: 0 for cpu mode
manual_seed: 100

# dataset and data loader settings
datasets:
  train:
    name: mtsnet_train
    type: PairedImageDataset
    dataroot_gt: ./datasets/GoPro/train/sharp_crops.lmdb
    dataroot_lq: ./datasets/GoPro/train/blur_crops.lmdb
    geometric_augs: true

    filename_tmpl: '{}'
    io_backend:
      type: lmdb
    
    # data loader
    num_worker_per_gpu: 4
    batch_size_per_gpu: 4
    ### -------------Progressive training--------------------------
    mini_batch_sizes: [4,2]    # Batch size per gpu
    iters: [700000,100000]
    gt_size: 512               # Max patch size for progressive training
    gt_sizes: [256,512]        # Patch sizes for progressive training.
    ### ------------------------------------------------------------
    
    dataset_enlarge_ratio: 1
    prefetch_mode: ~

  val:
    name: GoPro
    type: PairedImageDataset
    dataroot_gt: ./datasets/GoPro/test/target.lmdb
    dataroot_lq: ./datasets/GoPro/test/input.lmdb
    io_backend:
      type: lmdb 
      

# network structures
network_g:
  type: MTSNet
  L: 4
  N: 56
  T: 3
  embed_dim: 9
  embed_style: Hybrid
  NB: 6
  window_scales: [8, 16, 32, 64]
  ffn_expansion_factor: 2.2
  FFactivation: null
  alpha: 1
  beta: 1
  alpha_decay: !!float 1e-1
  beta_decay: !!float 1e-1
  groups: 4
  bias: False
  post_mts_function: MHG
  em_window_scales: [8, 16, 32, 64]
  num_heads: 4
  dwconv_usage: true
  drop_block_p: 0.


# path
path:
  pretrain_network_g: ~
  strict_load_g: true
  resume_state: ~

# training settings
train:
  total_iter: 1200000
  warmup_iter: -1 # no warm up
  use_grad_clip: true

  scheduler:
    type: CosineAnnealingRestartCyclicLR
    periods: [150000,150000,150000,150000,100000,100000]       
    restart_weights: [1,0.5,0.25,0.125,0.0625,0.03125]
    eta_mins: [0.0005,0.00025,0.000125,0.0000625,0.000031,0.000016]  
  
  mixing_augs:
    mixup: false
    mixup_beta: 0.
    use_identity: true

  optim_g:
    type: AdamW
    lr: !!float 1e-3
    weight_decay: 0.
    betas: [0.9, 0.999]
  
  # losses
  pixel_opt:
    type: L1Loss
    loss_weight: 1
    reduction: sum

# validation settings
val:
  window_size: 8
  val_freq: !!float 4e4
  save_img: false
  rgb2bgr: true
  use_image: false
  max_minibatch: 4
  
  metrics:
    psnr: # metric name, can be arbitrary
      type: calculate_psnr
      crop_border: 0
      test_y_channel: false

# logging settings
logger:
  print_freq: 200
  save_checkpoint_freq: !!float 4e3
  use_tb_logger: true
  wandb:
    project: ~
    resume_id: ~

# dist training settings
dist_params:
  backend: nccl
  port: 29500
